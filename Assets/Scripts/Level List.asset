%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: cedad4f39f8c32e4ba1b06c4146467fa, type: 3}
  m_Name: Level List
  m_EditorClassIdentifier: 
  savedLevels:
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    Name: Empty Board
    Description: Attempt to fill the board while obeying the rules below - Have Fun!
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000000000000000000000000000000000000030000000400000001000000000000000000000000000000060000000000000000000000020000000000000000000000050000000000000000000000060000000000000000000000000000000100000000000000000000000500000000000000000000000000000002000000030000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    Name: Valid Ring Example
    Description: 'This is an example of a valid loop, with the rest of the board
      yet to be filled in.

      Note that the loop is comprised of consecutive
      pairs, although the order of the pairs does not matter. Also note that no tile
      on the loop lies on the same hexagonal axis as a tile of the same value, nor
      in the same board region (Sudoku rules).'
  - x: 7
    y: 7
    BoardState: 00000000000000000000000007000000020000000900000006000000000000000000000002000000430000004400000041000000070000000000000003000000460000000500000008000000420000000800000009000000450000000800000000000000460000000900000004000000040000004100000007000000080000004500000003000000000000000700000042000000430000004400000001000000000000000000000005000000090000000100000006000000000000000000000000000000
    Name: Valid Ring Example - Solved
    Description: 'Here is a solved state for the previous example. All cells are
      filled, with no sudoku overlaps. Blue clockwise gears that touch the ring are
      inside it - and one that doesn''t touch the ring is distanced from it by a
      red anti-clockwise ge-

      you know what, don''t worry about gears, it won''t
      come up in these next few.'
  - x: 7
    y: 7
    BoardState: 00000000000000000000000002000000080000000000000003000000000000000000000003000000010000000900000004000000000000000000000000000000040000004000000040000000010000000200000005000000020000004000000000000000400000000300000006000000060000000900000040000000400000000900000008000000000000000800000001000000090000000400000005000000000000000000000000000000050000000600000008000000000000000000000000000000
    Name: The Smallest Ring
    Description: 'Remember, 7''s cannot go on the loop, as they are not part of a
      paired set.

      The solution is given in the next puzzle.'
  - x: 7
    y: 7
    BoardState: 00000000000000000000000002000000080000000700000003000000000000000000000003000000010000000900000004000000070000000000000007000000040000004600000045000000010000000200000006000000020000004100000000000000440000000300000005000000050000000900000042000000430000000900000008000000000000000800000001000000090000000400000006000000000000000000000007000000050000000600000008000000000000000000000000000000
    Name: 'The Smallest Ring: Solution'
    Description: Remember, 7's cannot go on the loop, as they are not part of a paired
      set.
  - x: 7
    y: 7
    BoardState: 00000000000000000000000087000000830000008400000088000000000000000000000000000000000000008500000089000000830000000000000000000000880000000000000000000000000000008400000081000000000000008700000000000000880000000000000086000000890000000000000083000000840000000000000089000000000000008200000000000000880000000000000087000000000000000000000087000000000000000000000089000000000000000000000000000000
    Name: Find The Loop 1
    Description: This might feel like a slow start, but look to your left, and in
      three easy steps you will find yourself thinking in pairs.
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000000000000000000000000000000000000830000008700000088000000000000000000000000000000880000008400000089000000870000000000000000000000870000008900000000000000850000000000000089000000000000008600000083000000890000008800000000000000000000000000000084000000880000008700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    Name: Find The Loop 2
    Description: Double back, change your mind - find the loop.
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000008200000089000000000000000000000000000000870000000000000000000000820000000000000000000000850000008800000081000000000000008700000000000000880000008900000000000000000000008100000084000000000000008700000088000000000000008300000088000000000000000000000000000000870000000000000089000000000000000000000089000000000000000000000086000000000000000000000000000000
    Name: Find The Loop 3
    Description: The loop has vanished... Find it?
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000880000000000000083000000000000000000000085000000000000000000000082000000000000000000000000000000000000008800000000000000890000000000000088000000890000000000000000000000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000089000000000000000000000000000000000000000000000088000000830000000000000086000000000000000000000000000000
    Name: Meatgrinder
    Description: Look I'm sure I solved this at some point
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000089000000000000000000000082000000000000000000000000000000880000000000000000000000810000008800000000000000890000000000000089000000000000008600000000000000000000000000000083000000000000008800000089000000880000000000000084000000000000000000000082000000000000008100000086000000000000000000000000000000000000000000000085000000000000000000000000000000
    Name: The Narrow Path
    Description: 
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000840000000000000089000000000000000000000085000000000000000000000000000000820000000000000089000000000000000000000000000000870000008600000087000000000000000000000000000000000000000000000084000000000000000000000000000000000000008500000000000000000000000000000000000000000000008300000081000000000000000000000089000000810000000000000088000000000000000000000000000000
    Name: Notes Needed
    Description: 'Feature Request: Let me write little notes in the corner of the
      hexes to mark what can go in them.

      Developer Response: It''s on the
      todo list!'
  - x: 7
    y: 7
    BoardState: 00000000000000000000000086000000870000000000000082000000000000000000000089000000810000000000000085000000000000000000000000000000000000000000000000000000870000008600000000000000000000008800000000000000000000008900000000000000860000000000000000000000000000000000000000000000000000000000000000000000000000000000000082000000000000000000000000000000000000008900000084000000000000000000000000000000
    Name: Grok This
    Description: 
  - x: 7
    y: 7
    BoardState: 00000000000000000000000088000000820000000000000000000000000000000000000000000000840000000000000000000000000000000000000085000000860000000000000000000000000000000000000000000000810000000000000000000000840000000000000000000000000000000000000084000000000000008500000087000000000000000000000088000000000000008700000089000000000000000000000000000000000000008900000083000000000000000000000000000000
    Name: Identification Issues
    Description: 
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000000000000000000000000000005000000440000004300000041000000070000000000000009000000000000000000000000000000000000000900000007000000000000000600000000000000080000000000000003000000000000000800000000000000000000000000000004000000000000000000000045000000000000004300000002000000000000000000000000000000460000004400000000000000000000000000000000000000
    Name: imperfection
    Description: This puzzle could be better, but it's late.
