%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: cedad4f39f8c32e4ba1b06c4146467fa, type: 3}
  m_Name: Level List
  m_EditorClassIdentifier: 
  savedLevels:
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    Name: Empty Board
    Description: Attempt to fill the board while obeying the rules below - Have Fun!
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000000000000000000000000000000000000030000000400000001000000000000000000000000000000060000000000000000000000020000000000000000000000050000000000000000000000060000000000000000000000000000000100000000000000000000000500000000000000000000000000000002000000030000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    Name: Valid Ring Example
    Description: 'This is an example of a valid loop, with the rest of the board
      yet to be filled in.

      Note that the loop is comprised of consecutive
      pairs, although the order of the pairs does not matter. Also note that no tile
      on the loop lies on the same hexagonal axis as a tile of the same value, nor
      in the same board region (Sudoku rules).'
  - x: 7
    y: 7
    BoardState: 00000000000000000000000007000000020000000900000006000000000000000000000002000000430000004400000041000000070000000000000003000000460000000500000008000000420000000800000009000000450000000800000000000000460000000900000004000000040000004100000007000000080000004500000003000000000000000700000042000000430000004400000001000000000000000000000005000000090000000100000006000000000000000000000000000000
    Name: Valid Ring Example - Solved
    Description: 'Here is a solved state for the previous example. All cells are
      filled, with no sudoku overlaps. Blue clockwise gears that touch the ring are
      inside it - and one that doesn''t touch the ring is distanced from it by a
      red anti-clockwise ge-

      you know what, don''t worry about gears, it won''t
      come up in these next few.'
  - x: 7
    y: 7
    BoardState: 0000000000000000000000008a0400008a0400008a0400008a04000000000000000000008a0400004000000040000000820000008a040000000000008a040000820000008a04000008000000810000008a0400008a04000089000000810000000000000086000000890000008a0400008a04000083000000880000008a040000850000008a040000000000008a0400008400000040000000400000008a04000000000000000000008a0400008a0400008a0400008a040000000000000000000000000000
    Name: Finish The Loop 1
    Description: Fill in the missing sections of the loop. Remember - the loop must
      consist of paired tiles!
  - x: 7
    y: 7
    BoardState: 0000000000000000000000008a0400008a040000890000008a0400000000000000000000400000008600000085000000400000008a0400000000000040000000880000008a04000088000000400000008a040000840000008a04000089000000000000008a0400008600000089000000830000008a0400008a0400008a040000880000008500000000000000860000008800000082000000830000008400000000000000000000008500000081000000890000008a040000000000000000000000000000
    Name: Finish The Loop 2
    Description: Place pairs of numbers on the loop to complete it!
  - x: 7
    y: 7
    BoardState: 0000000000000000000000008a0400008a0400008a0400008a04000000000000000000008a0400008a040000860000008a0400008a040000000000008a040000400000004000000040000000400000008a0400008a040000850000008a0400000000000088000000840000008a04000082000000880000008a0400008a040000850000008a04000000000000810000004000000040000000860000008a04000000000000000000008a0400008a040000810000008a040000000000000000000000000000
    Name: Finish The Loop 3
    Description: Fill in the remaining tiles of the loop. This is loop logic baby!
  - x: 7
    y: 7
    BoardState: 0000000000000000000000008a04000082000000860000008a04000000000000000000008a0400008a0400008a0400008a0400008a040000000000008a0400008a04000040000000400000008a0400008a0400008a0400008a0400004000000000000000400000008a0400008a0400008a0400008a04000040000000400000008a0400008a040000000000008a0400008a0400008a0400008a0400008a040000000000000000000081000000820000008500000086000000000000000000000000000000
    Name: Finish The Loop 4
    Description: Place the numbers 1 to 6 in the highlighted tiles to create a loop
      of <b>pairs</b> around the center of the board. This is the smallest valid
      loop.
  - x: 7
    y: 7
    BoardState: 000000000000000000000000820000008a0400008a04000083000000000000000000000083000000810000008a040000840000008a040000000000008a040000040000004000000040000000810000008200000086000000820000004000000000000000400000008300000085000000850000008a04000040000000400000008a0400008a040000000000008a040000810000008a040000840000008600000000000000000000008a04000085000000860000008a040000000000000000000000000000
    Name: The Smallest Ring Returns
    Description: Finish this board to graduate from LOOP SCHOOL
  - x: 7
    y: 7
    BoardState: 00000000000000000000000002000000080000000700000003000000000000000000000003000000010000000900000004000000070000000000000007000000040000004600000045000000010000000200000006000000020000004100000000000000440000000300000005000000050000000900000042000000430000000900000008000000000000000800000001000000090000000400000006000000000000000000000007000000050000000600000008000000000000000000000000000000
    Name: 'The Smallest Ring: Filled Board'
    Description: 'What are these tiles? On a full board each region should also have
      a 7, a clockwise gear, and an anti-clockwise gear.

      - 7''s cannot go
      on the loop, as they are not part of a paired set.

      - Gears must mesh
      logically, and when touching the loop; Clockwise goes inside, Anti-clockwise
      goes outside.'
  - x: 7
    y: 7
    BoardState: 00000000000000000000000089000000000000000000000087000000000000000000000087000000c600000000000000c500000089000000000000008a040000c50000000000000000000000c60000008a0400008a040000c3000000880000000000000088000000c40000008a0400008a040000c40000008a0400008a040000c3000000ca040000000000008a040000c100000088000000c50000008a04000000000000000000008a040000c2000000c60000008a040000000000000000000000000000
    Name: Break! 1
    Description: We've detected a break in the loop on the blue region. Take a look,
      would you?
  - x: 7
    y: 7
    BoardState: 0000000000000000000000008a04000088000000870000008a04000000000000000000008a04000089000000840000008500000086000000000000008700000085000000830000008a04000088000000840000008900000086000000880000000000000087000000830000008a0400008a040000000000008300000084000000000000008a040000000000008a04000000000000000000000000000089000000000000000000000000000000000000000000000000000000000000000000000000000000
    Name: An Open Jar
    Description: Lets put the lid on this.
  - x: 7
    y: 7
    BoardState: 00000000000000000000000087000000830000008400000088000000000000000000000000000000000000008500000089000000830000000000000000000000880000000000000000000000000000008400000081000000000000008700000000000000880000000000000086000000890000000000000083000000840000000000000089000000000000008200000000000000880000000000000087000000000000000000000087000000000000000000000089000000000000000000000000000000
    Name: Find The Loop 1
    Description: This might feel like a slow start, but look to your left, and in
      three easy steps you will find yourself thinking in pairs.
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000000000000000000000000000000000000830000008700000088000000000000000000000000000000880000008400000089000000870000000000000000000000870000008900000000000000850000000000000089000000000000008600000083000000890000008800000000000000000000000000000084000000880000008700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    Name: Find The Loop 2
    Description: Double back, change your mind - find the loop.
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000008200000089000000000000000000000000000000870000000000000000000000820000000000000000000000850000008800000081000000000000008700000000000000880000008900000000000000000000008100000084000000000000008700000088000000000000008300000088000000000000000000000000000000870000000000000089000000000000000000000089000000000000000000000086000000000000000000000000000000
    Name: Find The Loop 3
    Description: The loop has vanished... Find it?
  - x: 7
    y: 7
    BoardState: 0000000000000000000000008a04000000000000000000008900000000000000000000008a040000000000008800000000000000000000000000000083000000000000008a0400008a0400008800000000000000880000008900000000000000000000000000000000000000890000008a0400008a04000000000000000000008a0400008a0400000000000084000000890000008a040000810000008a0400000000000000000000880000008a0400008a04000082000000000000000000000000000000
    Name: Minimalism
    Description: 'Fill the empty loop using pairs of 1/2 and 3/4 <i>only</i>.

      5,
      6 and 7 is not allowed!'
  - x: 7
    y: 7
    BoardState: 0000000000000000000000008a0400008a0400008a0400008900000000000000000000008900000084000000860000008500000000000000000000008a0400008300000000000000000000008400000000000000000000008200000000000000000000008a040000830000008a0400008a04000081000000000000008a0400008800000082000000000000008a0400008400000000000000860000008100000000000000000000008900000083000000850000008a040000000000000000000000000000
    Name: Gears and 7's
    Description: Fill the remaining spaces, <i>only</i> by placing 7 or a missing
      gear.
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000890000000000000000000000000000000000000086000000000000000000000088000000820000000000000088000000000000000000000000000000810000008700000081000000000000008300000000000000000000000000000088000000000000000000000000000000880000000000000000000000000000008500000086000000870000000000000000000000000000000000000082000000000000000000000000000000000000000000000000000000
    Name: Gear Field Theory
    Description: 
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000090000000000000083000000000000000000000085000000000000000000000082000000000000000000000000000000000000008800000000000000890000000000000088000000890000000000000000000000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000089000000000000000000000000000000000000000000000088000000830000000000000086000000000000000000000000000000
    Name: Meatgrinder
    Description: In this puzzle, try to plot out tile where the loop <b><i>must</></b>
      travel, and use that to help you fill it in! Good luck!
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000089000000000000000000000082000000000000000000000000000000880000000000000000000000810000008800000000000000890000000000000089000000000000008600000000000000000000000000000083000000000000008800000089000000880000000000000084000000000000000000000082000000000000008100000086000000000000000000000000000000000000000000000085000000000000000000000000000000
    Name: The Narrow Path
    Description: In this puzzle, try to plot out tile where the loop <b><i>must</></b>
      travel, and use that to help you fill it in! Good luck!
  - x: 7
    y: 7
    BoardState: 00000000000000000000000085000000000000000000000084000000000000000000000084000000880000000000000087000000000000000000000000000000850000000000000089000000880000000000000000000000000000008700000000000000000000008600000000000000000000008800000000000000860000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000810000008200000000000000000000000000000000000000
    Name: Outer Limits
    Description: Push the loop to that outer limit!
  - x: 7
    y: 7
    BoardState: 00000000000000000000000086000000870000000000000082000000000000000000000089000000810000000000000085000000000000000000000000000000000000000000000000000000870000008600000000000000000000008800000000000000000000008900000000000000860000000000000000000000000000000000000000000000000000000000000000000000000000000000000082000000000000000000000000000000000000008900000084000000000000000000000000000000
    Name: Grok This
    Description: If you fill this board, you truely understand.
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000840000000000000089000000000000000000000085000000000000000000000000000000820000000000000089000000000000000000000000000000870000008600000087000000000000000000000000000000000000000000000084000000000000000000000000000000000000008500000000000000000000000000000000000000000000008300000081000000000000000000000089000000810000000000000088000000000000000000000000000000
    Name: Notes Needed
    Description: 'Feature Request: Let me write little notes in the corner of the
      hexes to mark what can go in them.

      Developer Response: It''s on the
      todo list!'
  - x: 7
    y: 7
    BoardState: 00000000000000000000000088000000820000000000000000000000000000000000000000000000840000000000000000000000000000000000000085000000860000000000000000000000000000000000000000000000810000000000000000000000840000000000000000000000000000000000000084000000000000008500000087000000000000000000000088000000000000008700000089000000000000000000000000000000000000008900000083000000000000000000000000000000
    Name: Identification Issues
    Description: 
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000086000000000000000000000000000000000000008700000000000000000000000000000086000000000000000000000000000000880000000000000000000000000000000000000000000000830000000000000000000000870000008300000008000000850000000000000000000000000000000000000000000000000000008200000000000000000000000000000083000000890000008700000000000000000000000000000000000000
    Name: 7 Wedge
    Description: Legendarily Hard
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000000000000000000000000000000000000000000005000000440000004300000041000000070000000000000009000000000000000000000000000000000000000900000007000000000000000600000000000000080000000000000003000000000000000800000000000000000000000000000004000000000000000000000045000000000000004300000002000000000000000000000000000000460000004400000000000000000000000000000000000000
    Name: imperfection
    Description: This puzzle could be better, but it's late.
  - x: 7
    y: 7
    BoardState: 00000000000000000000000089000000000000000000000000000000000000000000000085000000860000000000000000000000000000000000000000000000000000000000000085000000000000008600000082000000880000000000000000000000880000008100000083000000000000008600000000000000870000000000000085000000000000008300000000000000000000000000000000000000000000000000000086000000850000000000000000000000000000000000000000000000
    Name: Tension 1
    Description: Heads...
  - x: 7
    y: 7
    BoardState: 00000000000000000000000089000000000000000000000000000000000000000000000085000000860000000000000000000000000000000000000000000000000000000000000085000000000000008600000082000000880000000000000000000000880000008100000083000000000000008600000000000000870000000000000085000000000000008400000000000000000000000000000000000000000000000000000086000000850000000000000000000000000000000000000000000000
    Name: Tension 2
    Description: ...Tails.
  - x: 7
    y: 7
    BoardState: 00000000000000000000000000000000830000008500000000000000000000000000000000000000000000000000000086000000000000000000000000000000000000008100000000000000870000000000000083000000810000000000000000000000850000000000000000000000840000008200000087000000000000008600000000000000000000000000000000000000000000008500000000000000000000000000000000000000890000000000000086000000000000000000000000000000
    Name: Climbing The Wall
    Description: There, in the west, our base camp. To the east - the Wall.
